# vim: set ft=zsh:

BOLD="bold"
autoload colors is-at-least
colors
INDENT=""

_upgrade_brew_packages() {
	_update_brew
	outdated=$(brew outdated)
	if [[ -z $outdated ]]; then
		_installer_log "No brew package updates" "$reset_color"
	else
		_installer_log "Installing updates: \n $outdated"
		brew upgrade
	fi
}

_update_brew() {
	brew update
}

_system () {
  if [[ -z $SYSTEM ]]; then
	SYSTEM=$(uname)
  fi

  echo $SYSTEM
}

_post_install_log () {
  local msg=$1
  if [[ -z $2 ]]; then
	local color="blue"
  else
	local color=$2
  fi

  echo $fg[$color] "$msg" $reset_color >> "post_install.log"
}

_last_command_log () {
  result=$?
  if [[ -z $2 ]]; then
	local color="blue"
	local success="Installed $1 successfully"
	local failure="$1 install failed, check the raw_install.log"
  else
	local success=$1
	local failure=$2
  fi

  if [[ $result == 0 ]]; then
	_installer_log $success "green"
  else
	_installer_log $failure "red"
  fi
}

_installer_log () {
  local msg=$1

  if [[ -z $2 ]]; then
	local color="blue"
  else
	local color=$2
  fi

  if [[ -z $3 ]]; then
	local font="NONE"
  else
	local font="bold"
  fi

  if [[ $font = $BOLD ]]; then
    echo $fg_bold[$color] "$INDENT$msg" $reset_color
  else
    echo $fg[$color] "$INDENT$msg" $reset_color
  fi
}

_brew_check_install () {
  local package=$1
  if [ -z `brew list | grep "$package"` ]
  then
	  brew install $package
  else
	  _installer_log "zoxide already installed" "$reset_color"
  fi
}

_apt_check_install () {
  local package=$1
  if [ -z `apt-get list --installed | cut -f 1 -d "/" | grep "$package"` ]
  then
	  _installer_log "Installing $package" "green"
	  sudo apt-get install "$package"
  else
	  _installer_log "$package already installed" "$reset_color"
  fi
}

_which_check () {
  local executable=$1
  local install=$2
  if which $executable &> /dev/null; then
	 _installer_log "$executable already installed" "$reset_color"
  else
	 $install
  fi
}
